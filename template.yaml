AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  AWS CDK review & deploy tool working on Pull Request

Metadata:
  AWS::ServerlessRepo::Application:
    Name: cdkbot
    Description: AWS CDK review & deploy tool working on Pull Request
    Author: sambaiz
    SpdxLicenseId: Apache-2.0
    LicenseUrl: LICENSE
    ReadmeUrl: README.md
    Labels: ['cloudformation', 'cdk']
    HomePageUrl: https://github.com/sambaiz/cdkbot
    SemanticVersion: 0.4.0
    SourceCodeUrl: https://github.com/sambaiz/cdkbot

Parameters:
  Platform:
    Description: Only support github
    Type: String
    AllowedValues:
      - github
    Default: github
  GitHubUserName:
    Description: Name of the GitHub user calling the API
    Type: String
  GitHubAccessToken:
    Description: Access token of the GitHub user calling the API
    Type: String
    NoEcho: true
  GitHubWebhookSecret:
    Description: Repository's webhook secret
    Type: String
    NoEcho: true

Globals:
  Function:
    Timeout: 600
    MemorySize: 1024

Resources:
  WebhookFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/webhook/
      Handler: webhook
      Runtime: go1.x
      Timeout: 10
      MemorySize: 128
      Environment:
        Variables:
          OPERATION_TASK_ARN: !Ref OperationTaskDefinition
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /webhook
            Method: POST
  WebhookFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${WebhookFunction}
      RetentionInDays: 14
  TaskExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service: 'ecs-tasks.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: cdkbot-task-execution-role-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - ecr:GetAuthorizationToken
                  - ecr:BatchCheckLayerAvailability
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: '*'
  OperationTaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        # Caution: cdkbot use a very strong role because cdk can modify whatever resources.
        - arn:aws:iam::aws:policy/AdministratorAccess
  OperationTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      RequiresCompatibilities:
        - 'FARGATE'
      NetworkMode: 'awsvpc'
      ExecutionRoleArn: !Ref TaskExecutionRole
      TaskRoleArn: !Ref OperationTaskRole
      Cpu: '512'
      Memory: '1024'
      ContainerDefinitions:
        - Name: 'cdkbot-operation'
          Image: 'sambaiz/cdkbot-operation:0.4.0'
          Essential: 'true'
          LogConfiguration:
            LogDriver: 'awslogs'
            Options:
              awslogs-group: !Ref OperationTaskLogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: 'cdkbot-operation'
          Environment:
            - Name: 'TZ'
              Value: 'Asia/Tokyo'
            - Name: 'PLATFORM'
              Value: !Ref Platform
            - Name: 'GITHUB_USER_NAME'
              Value: !Ref GitHubUserName
            - Name: 'GITHUB_ACCESS_TOKEN'
              Value: !Ref GitHubAccessToken
            - Name: 'GITHUB_WEBHOOK_SECRET'
              Value: !Ref GitHubWebhookSecret
  OperationTaskLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: cdkbot-operation
      RetentionInDays: 1
Outputs:
  WebhookEndpoint:
    Description: "Webhook endpoint"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/webhook"